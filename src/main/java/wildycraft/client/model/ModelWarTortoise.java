// Date: 4/9/2013 11:46:45 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package wildycraft.client.model;

import org.lwjgl.opengl.GL11;

import wildycraft.entity.EntityWarTortoise;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelWarTortoise extends ModelBase
{
  //fields
    ModelRenderer Shape1;
    ModelRenderer Shape2;
    ModelRenderer tail;
    ModelRenderer head;
    ModelRenderer body;
    ModelRenderer leg1;
    ModelRenderer leg2;
    ModelRenderer leg3;
    ModelRenderer leg4;
  
  public ModelWarTortoise()
  {
    textureWidth = 128;
    textureHeight = 128;
    
      Shape1 = new ModelRenderer(this, 16, 30);
      Shape1.addBox(-12F, -13F, -14F, 24, 5, 30);
      Shape1.setRotationPoint(0F, 18F, 3F);
      Shape1.setTextureSize(128, 128);
      Shape1.mirror = true;
      setRotation(Shape1, 0F, 0F, 0F);
      Shape2 = new ModelRenderer(this, 29, 0);
      Shape2.addBox(-10F, -17F, -15F, 16, 4, 22);
      Shape2.setRotationPoint(2F, 18F, 8F);
      Shape2.setTextureSize(128, 128);
      Shape2.mirror = true;
      setRotation(Shape2, 0F, 0F, 0F);
      tail = new ModelRenderer(this, 111, 85);
      tail.addBox(-0.5F, -0.5F, 0F, 2, 2, 6);
      tail.setRotationPoint(-0.5F, 11F, 21F);
      tail.setTextureSize(128, 128);
      tail.mirror = true;
      setRotation(tail, 0F, 0F, 0F);
      head = new ModelRenderer(this, 2, 76);
      head.addBox(-3F, -4F, -6.5F, 8, 8, 9);
      head.setRotationPoint(-1F, 11F, -14.5F);
      head.setTextureSize(128, 128);
      head.mirror = true;
      setRotation(head, 0F, 0F, 0F);
      body = new ModelRenderer(this, 38, 69);
      body.addBox(-13F, -13F, -4F, 28, 34, 8);
      body.setRotationPoint(-1F, 14F, 0F);
      body.setTextureSize(128, 128);
      body.mirror = true;
      setRotation(body, 1.570796F, 0F, 0F);
      leg1 = new ModelRenderer(this, 60, 114);
      leg1.addBox(-2F, 0F, -2F, 4, 6, 4);
      leg1.setRotationPoint(-11F, 18F, 18F);
      leg1.setTextureSize(128, 128);
      leg1.mirror = true;
      setRotation(leg1, 0F, 0F, 0F);
      leg2 = new ModelRenderer(this, 60, 114);
      leg2.addBox(-2F, 0F, -2F, 4, 6, 4);
      leg2.setRotationPoint(11F, 18F, 18F);
      leg2.setTextureSize(128, 128);
      leg2.mirror = true;
      setRotation(leg2, 0F, 0F, 0F);
      leg3 = new ModelRenderer(this, 60, 114);
      leg3.addBox(-2F, 0F, -3F, 4, 6, 4);
      leg3.setRotationPoint(-11F, 18F, -9F);
      leg3.setTextureSize(128, 128);
      leg3.mirror = true;
      setRotation(leg3, 0F, 0F, 0F);
      leg4 = new ModelRenderer(this, 60, 114);
      leg4.addBox(-2F, 0F, -2F, 4, 6, 4);
      leg4.setRotationPoint(11F, 18F, -9F);
      leg4.setTextureSize(128, 128);
      leg4.mirror = true;
      setRotation(leg4, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    setRotationAngles(f, f1, f2, f3, f4, f5,entity);
    if (((EntityWarTortoise)entity).isSitting())
    {
		  GL11.glPushMatrix();
	            GL11.glTranslatef(0.0F, 4.0F * f5, 0.0F);
	            
    } else {leg1.render(f5);
	            leg2.render(f5);
	            leg3.render(f5);
	            leg4.render(f5);
    }
    Shape1.render(f5);
    Shape2.render(f5);
    tail.render(f5);
    head.render(f5);
    body.render(f5);
    
    if (((EntityWarTortoise)entity).isSitting())
    {
    	GL11.glPopMatrix();
    }
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5,Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5,entity);
    this.head.rotateAngleX = f4 / (180F / (float)Math.PI);
    this.head.rotateAngleY = f3 / (180F / (float)Math.PI);
    this.body.rotateAngleX = ((float)Math.PI / 2F);
    this.leg1.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
    this.leg2.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
    this.leg3.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
    this.leg4.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
  }

}
