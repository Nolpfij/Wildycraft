// Date: 3/23/2013 4:09:20 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package wildycraft.client.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelBiped;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelImp extends ModelBase
{
  //fields
    ModelRenderer Hron2;
    ModelRenderer Shape1;
    ModelRenderer head;
    ModelRenderer body;
    ModelRenderer rightarm;
    ModelRenderer leftarm;
    ModelRenderer bipedRightLeg;
    ModelRenderer bipedLeftLeg;
    ModelRenderer Horn1;
    ModelRenderer Shape2;
    ModelRenderer Shape3;
    ModelRenderer Shape4;
  
  public ModelImp()
  {
    textureWidth = 64;
    textureHeight = 64;
    
      Hron2 = new ModelRenderer(this, 31, 2);
      Hron2.addBox(0F, 0F, 0F, 0, 1, 1);
      Hron2.setRotationPoint(-1F, 12F, -1F);
      Hron2.setTextureSize(64, 64);
      Hron2.mirror = true;
      setRotation(Hron2, 0F, 0F, 0F);
      Shape1 = new ModelRenderer(this, 39, 19);
      Shape1.addBox(0F, 0F, 0F, 4, 1, 1);
      Shape1.setRotationPoint(-2F, 19F, 1F);
      Shape1.setTextureSize(64, 64);
      Shape1.mirror = true;
      setRotation(Shape1, 0F, -1.570796F, 0.418879F);
      head = new ModelRenderer(this, 27, 5);
      head.addBox(-4F, -8F, -4F, 3, 3, 3);
      head.setRotationPoint(0F, 21F, 2F);
      head.setTextureSize(64, 64);
      head.mirror = true;
      setRotation(head, 0F, 0F, 0F);
      body = new ModelRenderer(this, 29, 15);
      body.addBox(-4F, 0F, -2F, 3, 6, 1);
      body.setRotationPoint(0F, 14F, 1F);
      body.setTextureSize(64, 64);
      body.mirror = true;
      setRotation(body, 0.2617994F, 0F, 0F);
      rightarm = new ModelRenderer(this, 22, 16);
      rightarm.addBox(0F, -2F, -2F, 1, 3, 1);
      rightarm.setRotationPoint(-5F, 17.5F, 2F);
      rightarm.setTextureSize(64, 64);
      rightarm.mirror = true;
      setRotation(rightarm, 0.1919862F, 0F, 0F);
      leftarm = new ModelRenderer(this, 22, 16);
      leftarm.addBox(-1F, -2F, -2F, 1, 3, 1);
      leftarm.setRotationPoint(0F, 19F, -1F);
      leftarm.setTextureSize(64, 64);
      leftarm.mirror = true;
      setRotation(leftarm, -1.186824F, 0F, 0F);
      bipedRightLeg = new ModelRenderer(this, 32, 24);
      bipedRightLeg.addBox(-2F, 0F, -1F, 1, 4, 1);
      bipedRightLeg.setRotationPoint(-2F, 20F, 1.5F);
      bipedRightLeg.setTextureSize(64, 64);
      bipedRightLeg.mirror = true;
      setRotation(bipedRightLeg, 0F, 0F, 0F);
      bipedLeftLeg = new ModelRenderer(this, 32, 24);
      bipedLeftLeg.addBox(-2F, 0F, -1F, 1, 4, 1);
      bipedLeftLeg.setRotationPoint(0F, 20F, 1.5F);
      bipedLeftLeg.setTextureSize(64, 64);
      bipedLeftLeg.mirror = true;
      setRotation(bipedLeftLeg, 0F, 0F, 0F);
      Horn1 = new ModelRenderer(this, 31, 2);
      Horn1.addBox(0F, 0F, 0F, 0, 1, 1);
      Horn1.setRotationPoint(-4F, 12F, -1F);
      Horn1.setTextureSize(64, 64);
      Horn1.mirror = true;
      setRotation(Horn1, 0F, 0F, 0F);
      Shape2 = new ModelRenderer(this, 51, 19);
      Shape2.addBox(0F, 0F, 0F, 3, 1, 1);
      Shape2.setRotationPoint(-2F, 20.5F, 3.5F);
      Shape2.setTextureSize(64, 64);
      Shape2.mirror = true;
      setRotation(Shape2, 0F, -1.658063F, -0.6283185F);
      Shape3 = new ModelRenderer(this, 4, 18);
      Shape3.addBox(0F, 0F, 0F, 7, 1, 0);
      Shape3.setRotationPoint(-0.7F, 19F, -0.5F);
      Shape3.setTextureSize(64, 64);
      Shape3.mirror = true;
      setRotation(Shape3, -0.0698132F, 1.448623F, -0.9424778F);
      Shape4 = new ModelRenderer(this, 10, 15);
      Shape4.addBox(0F, 0F, 0F, 3, 0, 1);
      Shape4.setRotationPoint(-2F, 17.5F, -2.9F);
      Shape4.setTextureSize(64, 64);
      Shape4.mirror = true;
      setRotation(Shape4, 0.5585054F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    //super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    Hron2.renderWithRotation(f5);
    Shape1.renderWithRotation(f5);
    head.renderWithRotation(f5);
    body.renderWithRotation(f5);
    rightarm.renderWithRotation(f5);
    leftarm.renderWithRotation(f5);
    bipedRightLeg.renderWithRotation(f5);
    bipedLeftLeg.renderWithRotation(f5);
    Horn1.renderWithRotation(f5);
    Shape2.renderWithRotation(f5);
    Shape3.renderWithRotation(f5);
    Shape4.renderWithRotation(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    this.bipedRightLeg.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
    this.bipedLeftLeg.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
    this.bipedRightLeg.rotateAngleY = 0F;
    this.bipedLeftLeg.rotateAngleY = 0F;
  }

}
