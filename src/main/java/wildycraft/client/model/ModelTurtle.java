// Date: 4/7/2013 4:16:30 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package wildycraft.client.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelTurtle extends ModelBase
{
  //fields
    ModelRenderer Shell1;
    ModelRenderer Shell2;
    ModelRenderer ShellBase1;
    ModelRenderer ShellBase2;
    ModelRenderer Belly;
    ModelRenderer BellySide1;
    ModelRenderer BellySide2;
    ModelRenderer Neck;
    ModelRenderer Head;
    ModelRenderer FrontLeg2;
    ModelRenderer FrontLeg1;
    ModelRenderer BackLeg2;
    ModelRenderer BackLeg1;
    ModelRenderer Tail;
  
  public ModelTurtle()
  {
    textureWidth = 64;
    textureHeight = 32;
    
      Shell1 = new ModelRenderer(this, 0, 19);
      Shell1.addBox(1F, 0F, 0F, 8, 2, 11);
      Shell1.setRotationPoint(-5F, 19F, -6F);
      Shell1.setTextureSize(64, 32);
      Shell1.mirror = true;
      setRotation(Shell1, 0F, 0F, 0F);
      Shell2 = new ModelRenderer(this, 27, 20);
      Shell2.addBox(0F, 0F, 0F, 6, 1, 9);
      Shell2.setRotationPoint(-3F, 18F, -5F);
      Shell2.setTextureSize(64, 32);
      Shell2.mirror = true;
      setRotation(Shell2, 0F, 0F, 0F);
      ShellBase1 = new ModelRenderer(this, 8, 0);
      ShellBase1.addBox(0F, 0F, 0F, 4, 1, 13);
      ShellBase1.setRotationPoint(1F, 21F, -7F);
      ShellBase1.setTextureSize(64, 32);
      ShellBase1.mirror = true;
      setRotation(ShellBase1, 0F, 0F, 0F);
      ShellBase2 = new ModelRenderer(this, 8, 0);
      ShellBase2.addBox(0F, 0F, 0F, 4, 1, 13);
      ShellBase2.setRotationPoint(-5F, 21F, -7F);
      ShellBase2.setTextureSize(64, 32);
      ShellBase2.mirror = true;
      setRotation(ShellBase2, 0F, 0F, 0F);
      Belly = new ModelRenderer(this, 30, 0);
      Belly.addBox(0F, 0F, 0F, 6, 1, 11);
      Belly.setRotationPoint(-3F, 22F, -6F);
      Belly.setTextureSize(64, 32);
      Belly.mirror = true;
      setRotation(Belly, 0F, 0F, 0F);
      BellySide1 = new ModelRenderer(this, 0, 0);
      BellySide1.addBox(0F, 0F, 0F, 1, 1, 9);
      BellySide1.setRotationPoint(3F, 22F, -5F);
      BellySide1.setTextureSize(64, 32);
      BellySide1.mirror = true;
      setRotation(BellySide1, 0F, 0F, 0F);
      BellySide2 = new ModelRenderer(this, 0, 0);
      BellySide2.addBox(0F, 0F, 0F, 1, 1, 9);
      BellySide2.setRotationPoint(-4F, 22F, -5F);
      BellySide2.setTextureSize(64, 32);
      BellySide2.mirror = true;
      setRotation(BellySide2, 0F, 0F, 0F);
      Neck = new ModelRenderer(this, 0, 0);
      Neck.addBox(0F, 0F, 0F, 2, 1, 2);
      Neck.setRotationPoint(1F, 21F, -6F);
      Neck.setTextureSize(64, 32);
      Neck.mirror = true;
      setRotation(Neck, 0.3717861F, 3.141593F, 0F);
      Head = new ModelRenderer(this, 0, 3);
      Head.addBox(-1F, -2F, -2F, 2, 2, 2);
      Head.setRotationPoint(0F, 21F, -8F);
      Head.setTextureSize(64, 32);
      Head.mirror = true;
      setRotation(Head, 0F, 0F, 0F);
      FrontLeg2 = new ModelRenderer(this, 11, 0);
      FrontLeg2.addBox(0F, 0F, 0F, 1, 2, 1);
      FrontLeg2.setRotationPoint(3F, 22F, -6F);
      FrontLeg2.setTextureSize(64, 32);
      FrontLeg2.mirror = true;
      setRotation(FrontLeg2, 0F, 0F, 0F);
      FrontLeg1 = new ModelRenderer(this, 11, 0);
      FrontLeg1.addBox(0F, 0F, 0F, 1, 2, 1);
      FrontLeg1.setRotationPoint(-4F, 22F, -6F);
      FrontLeg1.setTextureSize(64, 32);
      FrontLeg1.mirror = true;
      setRotation(FrontLeg1, 0F, 0F, 0F);
      BackLeg2 = new ModelRenderer(this, 11, 0);
      BackLeg2.addBox(0F, 0F, 0F, 1, 2, 1);
      BackLeg2.setRotationPoint(3F, 22F, 4F);
      BackLeg2.setTextureSize(64, 32);
      BackLeg2.mirror = true;
      setRotation(BackLeg2, 0F, 0F, 0F);
      BackLeg1 = new ModelRenderer(this, 11, 0);
      BackLeg1.addBox(0F, 0F, 0F, 1, 2, 1);
      BackLeg1.setRotationPoint(-4F, 22F, 4F);
      BackLeg1.setTextureSize(64, 32);
      BackLeg1.mirror = true;
      setRotation(BackLeg1, 0F, 0F, 0F);
      Tail = new ModelRenderer(this, 11, 3);
      Tail.addBox(0F, 0F, 0F, 2, 1, 3);
      Tail.setRotationPoint(1F, 22F, 8F);
      Tail.setTextureSize(64, 32);
      Tail.mirror = true;
      setRotation(Tail, 0.3717861F, 3.141593F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    //super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5,entity);
    Shell1.render(f5);
    Shell2.render(f5);
    ShellBase1.render(f5);
    ShellBase2.render(f5);
    Belly.render(f5);
    BellySide1.render(f5);
    BellySide2.render(f5);
    Neck.render(f5);
    Head.render(f5);
    FrontLeg2.render(f5);
    FrontLeg1.render(f5);
    BackLeg2.render(f5);
    BackLeg1.render(f5);
    Tail.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float par1, float par2, float par3, float par4, float par5, float par6,Entity entity)
  {
    super.setRotationAngles(par1, par2, par3, par4, par5, par6,entity);
    this.Head.rotateAngleX = par5 / (180F / (float)Math.PI);
    this.Head.rotateAngleY = par4 / (180F / (float)Math.PI);
    this.FrontLeg1.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
    this.FrontLeg2.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 1.4F * par2;
    this.BackLeg1.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 1.4F * par2;
    this.BackLeg2.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
  }

}
