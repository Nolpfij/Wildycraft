// Date: 7/20/2014 5:53:57 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX


package wildycraft.client.model;

import wildycraft.entity.EntityGeneralGraardor;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.entity.monster.EntityIronGolem;
import net.minecraft.util.MathHelper;

public class ModelGeneralGraador extends ModelBase
{
  //fields
    ModelRenderer head;
    ModelRenderer body;
    ModelRenderer rightarm;
    ModelRenderer leftarm;
    ModelRenderer rightleg;
    ModelRenderer leftleg;
    ModelRenderer plateskirt;
    ModelRenderer shoulderguard2;
    ModelRenderer shoulderguard1;
    ModelRenderer shoulderspike1;
    ModelRenderer shoulderspike2;
    ModelRenderer plateskirt2;
    ModelRenderer shoulderspike3;
    ModelRenderer lefthorn1;
    ModelRenderer lefthorn2;
    ModelRenderer lefthorn3;
    ModelRenderer righthorn1;
    ModelRenderer righthorn2;
    ModelRenderer righthorn3;
    ModelRenderer string;
  
  public ModelGeneralGraador()
  {
    textureWidth = 256;
    textureHeight = 256;
    
      head = new ModelRenderer(this, 88, 17);
      head.addBox(-7F, -15F, -7.5F, 15, 15, 15);
      head.setRotationPoint(0F, -40F, -0.5F);
      head.setTextureSize(256, 256);
      head.mirror = true;
      setRotation(head, 0F, 0F, 0F);
      body = new ModelRenderer(this, 68, 69);
      body.addBox(-13F, -40F, -10F, 28, 33, 19);
      body.setRotationPoint(0F, 0F, 0F);
      body.setTextureSize(256, 256);
      body.mirror = true;
      setRotation(body, 0F, 0F, 0F);
      rightarm = new ModelRenderer(this, 180, 119);
      rightarm.addBox(-10F, -2F, -6F, 10, 33, 10);
      rightarm.setRotationPoint(-13F, -38F, 0F);
      rightarm.setTextureSize(256, 256);
      rightarm.mirror = true;
      setRotation(rightarm, 0F, 0F, 0.0698132F);
      leftarm = new ModelRenderer(this, 180, 119);
      leftarm.addBox(0F, -2F, -6F, 10, 33, 10);
      leftarm.setRotationPoint(15F, -38F, 0F);
      leftarm.setTextureSize(256, 256);
      leftarm.mirror = true;
      setRotation(leftarm, 0F, 0F, -0.0698132F);
      rightleg = new ModelRenderer(this, 83, 194);
      rightleg.addBox(-5F, 0F, -5F, 10, 31, 10);
      rightleg.setRotationPoint(-7F, -7F, 0F);
      rightleg.setTextureSize(256, 256);
      rightleg.mirror = true;
      setRotation(rightleg, 0F, 0F, 0F);
      leftleg = new ModelRenderer(this, 83, 194);
      leftleg.addBox(-5F, 0F, -5F, 10, 31, 10);
      leftleg.setRotationPoint(8F, -7F, 0F);
      leftleg.setTextureSize(256, 256);
      leftleg.mirror = true;
      setRotation(leftleg, 0F, 0F, 0F);
      plateskirt = new ModelRenderer(this, 60, 142);
      plateskirt.addBox(-14F, -19F, -11F, 30, 20, 21);
      plateskirt.setRotationPoint(0F, 0F, 0F);
      plateskirt.setTextureSize(256, 256);
      plateskirt.mirror = true;
      setRotation(plateskirt, 0F, 0F, 0F);
      shoulderguard2 = new ModelRenderer(this, 171, 92);
      shoulderguard2.addBox(0F, -3F, -7F, 20, 6, 12);
      shoulderguard2.setRotationPoint(15F, -38F, 0F);
      shoulderguard2.setTextureSize(256, 256);
      shoulderguard2.mirror = true;
      setRotation(shoulderguard2, 0F, 0F, 0F);
      shoulderguard1 = new ModelRenderer(this, 172, 55);
      shoulderguard1.addBox(9F, -43F, -10F, 17, 8, 19);
      shoulderguard1.setRotationPoint(0F, 0F, 0F);
      shoulderguard1.setTextureSize(256, 256);
      shoulderguard1.mirror = true;
      setRotation(shoulderguard1, 0F, 0F, 0F);
      shoulderspike1 = new ModelRenderer(this, 173, 34);
      shoulderspike1.addBox(-28F, -50F, 3F, 2, 14, 2);
      shoulderspike1.setRotationPoint(0F, 0F, 0F);
      shoulderspike1.setTextureSize(256, 256);
      shoulderspike1.mirror = true;
      setRotation(shoulderspike1, 0F, 0F, 1.012291F);
      shoulderspike2 = new ModelRenderer(this, 173, 34);
      shoulderspike2.addBox(-28F, -50F, -7F, 2, 14, 2);
      shoulderspike2.setRotationPoint(0F, 0F, 0F);
      shoulderspike2.setTextureSize(256, 256);
      shoulderspike2.mirror = true;
      setRotation(shoulderspike2, 0F, 0F, 1.012291F);
      plateskirt2 = new ModelRenderer(this, 17, 146);
      plateskirt2.addBox(-4F, -20F, -12F, 10, 27, 1);
      plateskirt2.setRotationPoint(0F, 0F, 0F);
      plateskirt2.setTextureSize(256, 256);
      plateskirt2.mirror = true;
      setRotation(plateskirt2, 0F, 0F, 0F);
      shoulderspike3 = new ModelRenderer(this, 188, 35);
      shoulderspike3.addBox(-29F, -52F, -2F, 2, 12, 2);
      shoulderspike3.setRotationPoint(0F, 0F, 0F);
      shoulderspike3.setTextureSize(256, 256);
      shoulderspike3.mirror = true;
      setRotation(shoulderspike3, 0F, 0F, 1.151917F);
      lefthorn1 = new ModelRenderer(this, 55, 38);
      lefthorn1.addBox(-11F, -15F, 1F, 4, 8, 4);
      lefthorn1.setRotationPoint(0F, -40F, -0.5F);
      lefthorn1.setTextureSize(256, 256);
      lefthorn1.mirror = true;
      setRotation(lefthorn1, 0.3141593F, 0F, 1.570796F);
      lefthorn2 = new ModelRenderer(this, 56, 23);
      lefthorn2.addBox(3.3F, -22F, 1.1F, 3, 7, 3);
      lefthorn2.setRotationPoint(0F, -40F, -0.5F);
      lefthorn2.setTextureSize(256, 256);
      lefthorn2.mirror = true;
      setRotation(lefthorn2, 0F, 0.296706F, 0.7330383F);
      lefthorn3 = new ModelRenderer(this, 56, 2);
      lefthorn3.addBox(12F, -28F, 2.9F, 2, 11, 2);
      lefthorn3.setRotationPoint(0F, -40F, -0.5F);
      lefthorn3.setTextureSize(256, 256);
      lefthorn3.mirror = true;
      setRotation(lefthorn3, 0F, 0.3665191F, 0.3316126F);
      righthorn1 = new ModelRenderer(this, 55, 38);
      righthorn1.addBox(-11F, 5F, 1F, 4, 8, 4);
      righthorn1.setRotationPoint(0F, -40F, -0.5F);
      righthorn1.setTextureSize(256, 256);
      righthorn1.mirror = true;
      setRotation(righthorn1, -0.3141593F, 0F, 1.570796F);
      righthorn2 = new ModelRenderer(this, 56, 23);
      righthorn2.addBox(-5.3F, -21F, 1.1F, 3, 7, 3);
      righthorn2.setRotationPoint(0F, -40F, -0.5F);
      righthorn2.setTextureSize(256, 256);
      righthorn2.mirror = true;
      setRotation(righthorn2, 0F, -0.296706F, -0.7330383F);
      righthorn3 = new ModelRenderer(this, 27, 4);
      righthorn3.addBox(-13F, -28F, 2.9F, 2, 11, 2);
      righthorn3.setRotationPoint(0F, -40F, -0.5F);
      righthorn3.setTextureSize(256, 256);
      righthorn3.mirror = true;
      setRotation(righthorn3, 0F, -0.3665191F, -0.3316126F);
      string = new ModelRenderer(this, 27, 23);
      string.addBox(-19.3F, -16F, 3.2F, 1, 8, 1);
      string.setRotationPoint(0F, -40F, -0.5F);
      string.setTextureSize(256, 256);
      string.mirror = true;
      setRotation(string, 0F, -0.3665191F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    head.renderWithRotation(f5);
    body.renderWithRotation(f5);
    rightarm.renderWithRotation(f5);
    leftarm.renderWithRotation(f5);
    rightleg.renderWithRotation(f5);
    leftleg.renderWithRotation(f5);
    plateskirt.renderWithRotation(f5);
    shoulderguard2.renderWithRotation(f5);
    shoulderguard1.renderWithRotation(f5);
    shoulderspike1.renderWithRotation(f5);
    shoulderspike2.renderWithRotation(f5);
    plateskirt2.renderWithRotation(f5);
    shoulderspike3.renderWithRotation(f5);
    lefthorn1.render(f5);
    lefthorn2.renderWithRotation(f5);
    lefthorn3.renderWithRotation(f5);
    righthorn1.render(f5);
    righthorn2.renderWithRotation(f5);
    righthorn3.renderWithRotation(f5);
    string.renderWithRotation(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5,Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    this.rightleg.rotateAngleX = MathHelper.cos(f * 0.4662F) * 1.4F * f1;
    this.leftleg.rotateAngleX = MathHelper.cos(f * 0.4662F + (float)Math.PI) * 1.4F * f1;
    this.rightarm.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 2.0F * f1 * 0.5F;
    this.leftarm.rotateAngleX = MathHelper.cos(f * 0.6662F) * 2.0F * f1 * 0.5F;
    this.rightarm.rotateAngleZ = 0.0698132F;
    this.leftarm.rotateAngleZ = -0.0698132F;
    this.rightarm.rotateAngleZ += MathHelper.cos(f2 * 0.09F) * 0.05F + 0.05F;
    this.leftarm.rotateAngleZ -= MathHelper.cos(f2 * 0.09F) * 0.05F + 0.05F;
    this.rightarm.rotateAngleX += MathHelper.sin(f2 * 0.067F) * 0.05F;
    this.leftarm.rotateAngleX -= MathHelper.sin(f2 * 0.067F) * 0.05F;
    
    EntityGeneralGraardor entityirongolem = (EntityGeneralGraardor)entity;
    int i = entityirongolem.getAttackTimer();

    if (i > 0)
    {
        this.rightarm.rotateAngleX = -1.0F + 1.5F * this.func_78172_a((float)i, 10.0F);
        this.leftarm.rotateAngleX = -1.0F + 1.5F * this.func_78172_a((float)i, 10.0F);
    }
  }
  /*public void setLivingAnimations(EntityLivingBase par1EntityLivingBase, float par2, float par3, float par4)
  {
      EntityGeneralGraardor entityirongolem = (EntityGeneralGraardor)par1EntityLivingBase;
      int i = entityirongolem.getAttackTimer();

      if (i > 0)
      {
          this.rightarm.rotateAngleX = -1.0F + 1.5F * this.func_78172_a((float)i - par4, 10.0F);
          this.leftarm.rotateAngleX = -1.0F + 1.5F * this.func_78172_a((float)i - par4, 10.0F);
      }
  }*/
  
  private float func_78172_a(float par1, float par2)
  {
      return (Math.abs(par1 % par2 - par2 * 0.5F) - par2 * 0.25F) / (par2 * 0.25F);
  }
}
